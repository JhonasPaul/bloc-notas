=================================================================================
INSTALAR ARCHIVOS (deb)
=================================================================================
sudo dpkg -i (nombre del paquete)


=================================================================================
INSTALAR TOLLBOX (tar.gz)
=================================================================================
1.- Descomprimir
tar -xzf jetbrains-toolbox-*.tar.gz
2.- Navegar al directorio extraído y ./jetbrains-toolbox
3.- Istalar fuse:
sudo add-apt-repository universe
sudo apt install libfuse2
4.- entar:
cd jetbrains-toolbox-*/ 
5.- iniciar:
./jetbrains-toolbox




INSTALAR DOCKER ENGINE:
for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo apt-get update
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
sudo apt-get install docker-compose


=================================================================================
INSTALAR JAVA EN UBUNTU: https://www.youtube.com/watch?v=iRXwoe3JinU
DESCARGAR JAVA DE: https://jdk.java.net/
=================================================================================
1.-extraer la carpeta manualmente en el lugar donde se descargo
2.- creamos la carpeta jvm dentro del directorio opt:
   sudo mkdir /opt/jvm
3.-cambiamos de dueño al repositorio creado de root al que estamos logeado:
   sudo chown $USER:$USER /opt/jvm/
4.- mover la descarga a  /opt/jvm/
   mv (ruta donde esta la descarga descomprimida) /opt/jvm/
5.-crear las variables de entorno en nano con: sudo nano /etc/profile
    JAVA_HOME=/opt/jvm/jdk-17
   PATH=$PATH:$HOME/bin:$JAVA_HOME/bin
   export JAVA_HOME
   export PATH
6.- releer:
   . /etc/profile


DESINTALAR JAVA EN UBUNTU:
  -ejecutamos para saber la version y el nombre de java para poder desintalar
   sudo dpkg --list | grep -i jdk
  -para desintalar:
   sudo apt-get purge (nombre exacto del java, es de ii). Tutorial https://www.youtube.com/watch?v=OL0a45h0vxQ
	(porner si, si ya hemos intalado una version de java se pondra en uso automaticamente)

================================================================================
INSTALAR GIT
================================================================================
sudo apt-get update
sudo apt-get install git -y
git --version
================================================================================
INSTALAR MYSQL: https://www.youtube.com/watch?v=KM2y_BeDxGg
=================================================================================
1. Instalar Mysql
 apt-get update
 sudo apt-get install mysql-server
2. Instalar Workbench Desde la tienda 
 (no esta en el repositorio)
3. Desde la misma tienda ir a permission y habilitar: Read, add, change, or remove save passwords

si hay error entrar como sper usuario
4.- sudo mysql -u root -p 
   ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '45549813O'; 

Servicio iniciar start, detener servicio stop:   
sudo service mysql start -p 3307



   
=================================================================================
INSTALAR ORACLE CON DOCKER
=================================================================================
slir del escritorio y crear una nueva carpeta:
1.- mkdir dockerOracle
2.- entrar a esa carpeta y clonar:
   git clone https://github.com/oracle/docker-images.git
3.- ingresar a la carpeta donde estan los archivos:
   dockerOracle/docker-images/OracleDatabase/SingleInstance/dockerfiles
4.-crear la imagen a traves del archivo builContainerImages.sh:
  sudo ./buildContainerImage.sh -v 21.3.0 -x
5.-listar la iamgen creada: sudo docker images
6.-creamos el contenedor a parti de la imagen:
    sudo docker run --name myxedb \
    -d \
    -p 51521:1521 \
    -p 55500:5500 \
    -e ORACLE_PWD=oracle \
    -e ORACLE_CHARACTERSET=AL32UTF8 \
    oracle/database:21.3.0-xe
7.- listar el contenedor creado: sudo docker ps -a , sudo docker ps para saber cual estalevantado
8.- configurar el servicio:
sudo docker exec -it --user=oracle myxedb bash
. oraenv
 XE
 sqlplus sys@XEPDB1 as sysdba
12.- contraseña: oracle
13.- poner:
   sho con_name  --> deberia salir: XEPDB1
   
   usuario: SYSTEM
   perto: 51521
   
para entrar al sqlplus:
 1.- entrar a la ubicacion dela version de oracle:
     docker-images/OracleDatabase/SingleInstance/dockerfiles/21.3.0
 2.- docker exec -it --user=oracle myxedb bash
 3.- . oraenv
 4.-sqlplus sys@XEPDB1 as sysdba
 5.- Enter password: oracle
 
 
=================================================================================
INSTALAR SQL DEVELOPER
=================================================================================
1.- sudo apt-get install alien
entramos a donde se descargo el programa
cd Descargas
convertimos el rpm a deb
sudo alien --scripts -d sqldeveloper-21.2.1-204.1703.noarch.rpm
instalamos el deb
sudo dpkg --install sqldeveloper_21.2.1-205.1703_all.deb
ejecutamos el programa
/opt/sqldeveloper/sqldeveloper.sh

=================================================================================
INSTALAR NODE Y ANGULAR
=================================================================================
sudo apt update
sudo apt upgrade
sudo apt install curl
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
sudo apt install nodejs
node -v
npm -v

o

sudo apt-get update
sudo apt-get install nodejs
sudo apt-get install npm
sudo npm install -g @angular/cli
sudo npm install -g typescript
opcional
ng new my-dream-app
ng serve

=================================================================================
INSTALAR DRIVERS NVIDIA
=================================================================================
sudo dpkg --add-architecture i386
sudo apt update
sudo apt install libnvidia-gl-535:i386


=================================================================================
MONTAR DISCO SUPERBLOCK
=================================================================================
sudo apt-get install ntfs-3g  
sudo ntfsfix /dev/sda1
udisksctl mount -b /dev/sda1 -> saldra error esperado
sudo mkdir -p /media/jonathan/Externo
sudo mount -t ntfs-3g /dev/sda1 media/jonathan/Externo
sudo blkid /dev/sda1
saldra esto: 
/dev/sda1: LABEL="Externo" BLOCK_SIZE="512" UUID="50567BE4567BC96C" TYPE="ntfs" PARTUUID="c2941917-01"
-copiar el UUID y pegarlo en nano:
sudo nano /etc/fstab
sudo mount -a


